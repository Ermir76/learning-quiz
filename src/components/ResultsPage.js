import React from 'react';

const ResultsPage = ({ setPage, results, quiz }) => {
    // Check if this is flashcard results or quiz results
    const isFlashcard = results.type === 'flashcard';
    
    // Calculate score and total based on result type
    const score = isFlashcard ? results.knownCount : results.filter(r => r.isCorrect).length;
    const total = isFlashcard ? results.totalCards : quiz.questions.length;
    const percentage = isFlashcard ? results.percentage : Math.round((score / total) * 100);

        return (
            <div className="app-shell min-h-screen px-6 py-10">
                <div className="max-w-4xl mx-auto space-y-8 animate-fade-in">
                    <div className="flex items-center justify-between">
                        <h1 className="text-3xl font-semibold text-slate-900 dark:text-slate-100">üìä {isFlashcard ? 'Flashcard' : 'Quiz'} Results</h1>
                        <button onClick={() => setPage('categoryQuizList')} className="btn-quiet !px-4 !py-2 text-sm">‚Üê Back</button>
                    </div>
                    <div className="card p-10">
                        <div className="text-center mb-10">
                            <h2 className="text-2xl font-semibold text-slate-900 dark:text-slate-100 mb-2">{isFlashcard ? 'Flashcard Session Complete!' : 'Quiz Complete!'}</h2>
                            <p className="text-sm text-slate-600 dark:text-slate-400 mb-6">{isFlashcard ? 'Your Knowledge Score' : 'Your Score'}</p>
                            <div className="flex items-end justify-center gap-4">
                                <p className="text-6xl font-bold tracking-tight text-slate-900 dark:text-white">{score}<span className="text-2xl font-medium text-slate-500 dark:text-slate-400"> / {total}</span></p>
                                <p className="text-3xl font-semibold text-accent-strong">{percentage}%</p>
                            </div>
                            {quiz.modelUsed && (
                                <p className="text-xs text-slate-500 mt-4">Generated by: {quiz.modelUsed}</p>
                            )}
                        </div>
                        <div>
                            <h3 className="text-lg font-semibold mb-4 text-slate-900 dark:text-slate-100">{isFlashcard ? 'Review Your Cards' : 'Review Your Answers'}</h3>
                            <div className="space-y-4 max-h-80 overflow-y-auto pr-2">
                                {isFlashcard ? (
                                    results.cards.map((card, index) => (
                                        <div key={index} className={`rounded-lg border px-5 py-4 text-sm leading-relaxed shadow-sm ${card.known ? 'bg-green-50 border-green-200 text-green-800 dark:bg-green-900/40 dark:border-green-700 dark:text-green-200' : 'bg-red-50 border-red-200 text-red-800 dark:bg-red-900/40 dark:border-red-700 dark:text-red-200'}`}>
                                            <p className="font-semibold mb-2">{index + 1}. {card.questionText}</p>
                                            <p className="text-slate-700 dark:text-slate-300 mb-1">Answer: {card.answer}</p>
                                            <p className="text-xs font-medium opacity-90">{card.known ? '‚úì You knew this' : "‚úó You didn't know this"}</p>
                                        </div>
                                    ))
                                ) : (
                                    results.map((result, index) => (
                                        <div key={index} className={`rounded-lg border px-5 py-4 text-sm leading-relaxed shadow-sm ${result.isCorrect ? 'bg-green-50 border-green-200 text-green-800 dark:bg-green-900/40 dark:border-green-700 dark:text-green-200' : 'bg-red-50 border-red-200 text-red-800 dark:bg-red-900/40 dark:border-red-700 dark:text-red-200'}`}>
                                            <p className="font-semibold mb-2">{index + 1}. {result.questionText}</p>
                                            {result.type === 'code-input' ? (
                                                <div className="space-y-2">
                                                    <div>
                                                        <p className="text-slate-700 dark:text-slate-300 text-xs font-semibold uppercase tracking-wide">Your Answer</p>
                                                        <pre className="mt-1 rounded border bg-slate-900 text-white text-xs p-3 overflow-x-auto"><code className="font-mono">{result.selected}</code></pre>
                                                    </div>
                                                    {!result.isCorrect && (
                                                        <div>
                                                            <p className="text-slate-700 dark:text-slate-300 text-xs font-semibold uppercase tracking-wide">Correct Answer</p>
                                                            <pre className="mt-1 rounded border bg-slate-900 text-white text-xs p-3 overflow-x-auto"><code className="font-mono">{result.correct}</code></pre>
                                                        </div>
                                                    )}
                                                </div>
                                            ) : (
                                                <div className="space-y-1">
                                                    <p className="text-slate-700 dark:text-slate-300">Your answer: {result.selected}</p>
                                                    {!result.isCorrect && <p className="text-slate-700 dark:text-slate-300">Correct answer: {result.correct}</p>}
                                                    {result.explanation && (
                                                        <div className="mt-2 pt-2 border-t border-surface-200 dark:border-slate-600">
                                                            <p className="text-xs text-slate-500 dark:text-slate-400">{result.explanation}</p>
                                                        </div>
                                                    )}
                                                </div>
                                            )}
                                            {result.learnMoreUrl && <a href={result.learnMoreUrl} target="_blank" rel="noopener noreferrer" className="text-xs text-accent hover:text-accent-strong underline mt-2 inline-block">Learn More</a>}
                                        </div>
                                    ))
                                )}
                            </div>
                        </div>
                        <button onClick={() => setPage('categoryQuizList')} className="btn-primary w-full mt-10">Back to Study Sets</button>
                    </div>
                </div>
            </div>
        );
};

export default ResultsPage;